// This file is auto-generated by @hey-api/openapi-ts

export const Volo_Abp_Account_ChangePasswordInputSchema = {
    required: ['newPassword'],
    type: 'object',
    properties: {
        currentPassword: {
            maxLength: 128,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        newPassword: {
            maxLength: 128,
            minLength: 0,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Account_ProfileDtoSchema = {
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        userName: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        surname: {
            type: 'string',
            nullable: true
        },
        phoneNumber: {
            type: 'string',
            nullable: true
        },
        isExternal: {
            type: 'boolean'
        },
        hasPassword: {
            type: 'boolean'
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Account_RegisterDtoSchema = {
    required: ['appName', 'emailAddress', 'password', 'userName'],
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        userName: {
            maxLength: 256,
            minLength: 0,
            type: 'string'
        },
        emailAddress: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            format: 'email'
        },
        password: {
            maxLength: 128,
            minLength: 0,
            type: 'string',
            format: 'password'
        },
        appName: {
            minLength: 1,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Account_ResetPasswordDtoSchema = {
    required: ['password', 'resetToken'],
    type: 'object',
    properties: {
        userId: {
            type: 'string',
            format: 'uuid'
        },
        resetToken: {
            minLength: 1,
            type: 'string'
        },
        password: {
            minLength: 1,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Account_SendPasswordResetCodeDtoSchema = {
    required: ['appName', 'email'],
    type: 'object',
    properties: {
        email: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            format: 'email'
        },
        appName: {
            minLength: 1,
            type: 'string'
        },
        returnUrl: {
            type: 'string',
            nullable: true
        },
        returnUrlHash: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Account_UpdateProfileDtoSchema = {
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        userName: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        email: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        name: {
            maxLength: 64,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        surname: {
            maxLength: 64,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        phoneNumber: {
            maxLength: 16,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Account_VerifyPasswordResetTokenInputSchema = {
    required: ['resetToken'],
    type: 'object',
    properties: {
        userId: {
            type: 'string',
            format: 'uuid'
        },
        resetToken: {
            minLength: 1,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_ListResultDto_1__Volo_Abp_Identity_IdentityRoleDto__Volo_Abp_Identity_Application_Contracts__Version_8_3_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Identity.IdentityRoleDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_ListResultDto_1__Volo_Abp_Users_UserData__Volo_Abp_Users_Abstractions__Version_8_3_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Users.UserData'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__Volo_Abp_Identity_IdentityRoleDto__Volo_Abp_Identity_Application_Contracts__Version_8_3_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Identity.IdentityRoleDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__Volo_Abp_Identity_IdentityUserDto__Volo_Abp_Identity_Application_Contracts__Version_8_3_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Identity.IdentityUserDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__Volo_Abp_TenantManagement_TenantDto__Volo_Abp_TenantManagement_Application_Contracts__Version_8_3_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.TenantManagement.TenantDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationAuthConfigurationDtoSchema = {
    type: 'object',
    properties: {
        grantedPolicies: {
            type: 'object',
            additionalProperties: {
                type: 'boolean'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationConfigurationDtoSchema = {
    type: 'object',
    properties: {
        localization: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto'
        },
        auth: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto'
        },
        setting: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto'
        },
        currentUser: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto'
        },
        features: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto'
        },
        globalFeatures: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto'
        },
        multiTenancy: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto'
        },
        currentTenant: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto'
        },
        timing: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto'
        },
        clock: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto'
        },
        objectExtensions: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto'
        },
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationFeatureConfigurationDtoSchema = {
    type: 'object',
    properties: {
        values: {
            type: 'object',
            additionalProperties: {
                type: 'string',
                nullable: true
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationGlobalFeatureConfigurationDtoSchema = {
    type: 'object',
    properties: {
        enabledFeatures: {
            uniqueItems: true,
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationConfigurationDtoSchema = {
    type: 'object',
    properties: {
        values: {
            type: 'object',
            additionalProperties: {
                type: 'object',
                additionalProperties: {
                    type: 'string'
                }
            },
            nullable: true
        },
        resources: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto'
            },
            nullable: true
        },
        languages: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Localization.LanguageInfo'
            },
            nullable: true
        },
        currentCulture: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto'
        },
        defaultResourceName: {
            type: 'string',
            nullable: true
        },
        languagesMap: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/Volo.Abp.NameValue'
                }
            },
            nullable: true
        },
        languageFilesMap: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/Volo.Abp.NameValue'
                }
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationDtoSchema = {
    type: 'object',
    properties: {
        resources: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto'
            },
            nullable: true
        },
        currentCulture: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationResourceDtoSchema = {
    type: 'object',
    properties: {
        texts: {
            type: 'object',
            additionalProperties: {
                type: 'string'
            },
            nullable: true
        },
        baseResources: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationSettingConfigurationDtoSchema = {
    type: 'object',
    properties: {
        values: {
            type: 'object',
            additionalProperties: {
                type: 'string',
                nullable: true
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ClockDtoSchema = {
    type: 'object',
    properties: {
        kind: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentCultureDtoSchema = {
    type: 'object',
    properties: {
        displayName: {
            type: 'string',
            nullable: true
        },
        englishName: {
            type: 'string',
            nullable: true
        },
        threeLetterIsoLanguageName: {
            type: 'string',
            nullable: true
        },
        twoLetterIsoLanguageName: {
            type: 'string',
            nullable: true
        },
        isRightToLeft: {
            type: 'boolean'
        },
        cultureName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        nativeName: {
            type: 'string',
            nullable: true
        },
        dateTimeFormat: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentUserDtoSchema = {
    type: 'object',
    properties: {
        isAuthenticated: {
            type: 'boolean'
        },
        id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        tenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        impersonatorUserId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        impersonatorTenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        impersonatorUserName: {
            type: 'string',
            nullable: true
        },
        impersonatorTenantName: {
            type: 'string',
            nullable: true
        },
        userName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        surName: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        emailVerified: {
            type: 'boolean'
        },
        phoneNumber: {
            type: 'string',
            nullable: true
        },
        phoneNumberVerified: {
            type: 'boolean'
        },
        roles: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        sessionId: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_DateTimeFormatDtoSchema = {
    type: 'object',
    properties: {
        calendarAlgorithmType: {
            type: 'string',
            nullable: true
        },
        dateTimeFormatLong: {
            type: 'string',
            nullable: true
        },
        shortDatePattern: {
            type: 'string',
            nullable: true
        },
        fullDateTimePattern: {
            type: 'string',
            nullable: true
        },
        dateSeparator: {
            type: 'string',
            nullable: true
        },
        shortTimePattern: {
            type: 'string',
            nullable: true
        },
        longTimePattern: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_IanaTimeZoneSchema = {
    type: 'object',
    properties: {
        timeZoneName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_EntityExtensionDtoSchema = {
    type: 'object',
    properties: {
        properties: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto'
            },
            nullable: true
        },
        configuration: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumDtoSchema = {
    type: 'object',
    properties: {
        fields: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto'
            },
            nullable: true
        },
        localizationResource: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumFieldDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        value: {
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiCreateDtoSchema = {
    type: 'object',
    properties: {
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiDtoSchema = {
    type: 'object',
    properties: {
        onGet: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto'
        },
        onCreate: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto'
        },
        onUpdate: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiGetDtoSchema = {
    type: 'object',
    properties: {
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiUpdateDtoSchema = {
    type: 'object',
    properties: {
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyAttributeDtoSchema = {
    type: 'object',
    properties: {
        typeSimple: {
            type: 'string',
            nullable: true
        },
        config: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyDtoSchema = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        displayName: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto'
        },
        api: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto'
        },
        ui: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto'
        },
        attributes: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto'
            },
            nullable: true
        },
        configuration: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        },
        defaultValue: {
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiDtoSchema = {
    type: 'object',
    properties: {
        onTable: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto'
        },
        onCreateForm: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto'
        },
        onEditForm: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto'
        },
        lookup: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiFormDtoSchema = {
    type: 'object',
    properties: {
        isVisible: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiLookupDtoSchema = {
    type: 'object',
    properties: {
        url: {
            type: 'string',
            nullable: true
        },
        resultListPropertyName: {
            type: 'string',
            nullable: true
        },
        displayPropertyName: {
            type: 'string',
            nullable: true
        },
        valuePropertyName: {
            type: 'string',
            nullable: true
        },
        filterParamName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiTableDtoSchema = {
    type: 'object',
    properties: {
        isVisible: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_LocalizableStringDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        resource: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ModuleExtensionDtoSchema = {
    type: 'object',
    properties: {
        entities: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto'
            },
            nullable: true
        },
        configuration: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ObjectExtensionsDtoSchema = {
    type: 'object',
    properties: {
        modules: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto'
            },
            nullable: true
        },
        enums: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimeZoneSchema = {
    type: 'object',
    properties: {
        iana: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone'
        },
        windows: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimingDtoSchema = {
    type: 'object',
    properties: {
        timeZone: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_WindowsTimeZoneSchema = {
    type: 'object',
    properties: {
        timeZoneId: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_MultiTenancy_CurrentTenantDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_MultiTenancy_FindTenantResultDtoSchema = {
    type: 'object',
    properties: {
        success: {
            type: 'boolean'
        },
        tenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        normalizedName: {
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_MultiTenancy_MultiTenancyInfoDtoSchema = {
    type: 'object',
    properties: {
        isEnabled: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_FeatureManagement_FeatureDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        displayName: {
            type: 'string',
            nullable: true
        },
        value: {
            type: 'string',
            nullable: true
        },
        provider: {
            '$ref': '#/components/schemas/Volo.Abp.FeatureManagement.FeatureProviderDto'
        },
        description: {
            type: 'string',
            nullable: true
        },
        valueType: {
            '$ref': '#/components/schemas/Volo.Abp.Validation.StringValues.IStringValueType'
        },
        depth: {
            type: 'integer',
            format: 'int32'
        },
        parentName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_FeatureManagement_FeatureGroupDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        displayName: {
            type: 'string',
            nullable: true
        },
        features: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.FeatureManagement.FeatureDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_FeatureManagement_FeatureProviderDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        key: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_FeatureManagement_GetFeatureListResultDtoSchema = {
    type: 'object',
    properties: {
        groups: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.FeatureManagement.FeatureGroupDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_FeatureManagement_UpdateFeatureDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        value: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_FeatureManagement_UpdateFeaturesDtoSchema = {
    type: 'object',
    properties: {
        features: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.FeatureManagement.UpdateFeatureDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ActionApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        uniqueName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        httpMethod: {
            type: 'string',
            nullable: true
        },
        url: {
            type: 'string',
            nullable: true
        },
        supportedVersions: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        parametersOnMethod: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel'
            },
            nullable: true
        },
        parameters: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ParameterApiDescriptionModel'
            },
            nullable: true
        },
        returnValue: {
            '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel'
        },
        allowAnonymous: {
            type: 'boolean',
            nullable: true
        },
        implementFrom: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ApplicationApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        modules: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ModuleApiDescriptionModel'
            },
            nullable: true
        },
        types: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.TypeApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ControllerApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        controllerName: {
            type: 'string',
            nullable: true
        },
        controllerGroupName: {
            type: 'string',
            nullable: true
        },
        isRemoteService: {
            type: 'boolean'
        },
        isIntegrationService: {
            type: 'boolean'
        },
        apiVersion: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        interfaces: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel'
            },
            nullable: true
        },
        actions: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ActionApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ControllerInterfaceApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        methods: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_InterfaceMethodApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        parametersOnMethod: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel'
            },
            nullable: true
        },
        returnValue: {
            '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_MethodParameterApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        typeAsString: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        isOptional: {
            type: 'boolean'
        },
        defaultValue: {
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ModuleApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        rootPath: {
            type: 'string',
            nullable: true
        },
        remoteServiceName: {
            type: 'string',
            nullable: true
        },
        controllers: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ControllerApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ParameterApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        nameOnMethod: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        jsonName: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        isOptional: {
            type: 'boolean'
        },
        defaultValue: {
            nullable: true
        },
        constraintTypes: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        bindingSourceId: {
            type: 'string',
            nullable: true
        },
        descriptorName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_PropertyApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        jsonName: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        isRequired: {
            type: 'boolean'
        },
        minLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        maxLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        minimum: {
            type: 'string',
            nullable: true
        },
        maximum: {
            type: 'string',
            nullable: true
        },
        regex: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ReturnValueApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_TypeApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        baseType: {
            type: 'string',
            nullable: true
        },
        isEnum: {
            type: 'boolean'
        },
        enumNames: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        enumValues: {
            type: 'array',
            items: {},
            nullable: true
        },
        genericArguments: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        properties: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.PropertyApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_RemoteServiceErrorInfoSchema = {
    type: 'object',
    properties: {
        code: {
            type: 'string',
            nullable: true
        },
        message: {
            type: 'string',
            nullable: true
        },
        details: {
            type: 'string',
            nullable: true
        },
        data: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        },
        validationErrors: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.RemoteServiceValidationErrorInfo'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_RemoteServiceErrorResponseSchema = {
    type: 'object',
    properties: {
        error: {
            '$ref': '#/components/schemas/Volo.Abp.Http.RemoteServiceErrorInfo'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_RemoteServiceValidationErrorInfoSchema = {
    type: 'object',
    properties: {
        message: {
            type: 'string',
            nullable: true
        },
        members: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Identity_IdentityRoleCreateDtoSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        name: {
            maxLength: 256,
            minLength: 0,
            type: 'string'
        },
        isDefault: {
            type: 'boolean'
        },
        isPublic: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Identity_IdentityRoleDtoSchema = {
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        isDefault: {
            type: 'boolean'
        },
        isStatic: {
            type: 'boolean'
        },
        isPublic: {
            type: 'boolean'
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Identity_IdentityRoleUpdateDtoSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        name: {
            maxLength: 256,
            minLength: 0,
            type: 'string'
        },
        isDefault: {
            type: 'boolean'
        },
        isPublic: {
            type: 'boolean'
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Identity_IdentityUserCreateDtoSchema = {
    required: ['email', 'password', 'userName'],
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        userName: {
            maxLength: 256,
            minLength: 0,
            type: 'string'
        },
        name: {
            maxLength: 64,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        surname: {
            maxLength: 64,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        email: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            format: 'email'
        },
        phoneNumber: {
            maxLength: 16,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        lockoutEnabled: {
            type: 'boolean'
        },
        roleNames: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        password: {
            maxLength: 128,
            minLength: 0,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Identity_IdentityUserDtoSchema = {
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        id: {
            type: 'string',
            format: 'uuid'
        },
        creationTime: {
            type: 'string',
            format: 'date-time'
        },
        creatorId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        lastModificationTime: {
            type: 'string',
            format: 'date-time',
            nullable: true
        },
        lastModifierId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        isDeleted: {
            type: 'boolean'
        },
        deleterId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        deletionTime: {
            type: 'string',
            format: 'date-time',
            nullable: true
        },
        tenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        userName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        surname: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        emailConfirmed: {
            type: 'boolean'
        },
        phoneNumber: {
            type: 'string',
            nullable: true
        },
        phoneNumberConfirmed: {
            type: 'boolean'
        },
        isActive: {
            type: 'boolean'
        },
        lockoutEnabled: {
            type: 'boolean'
        },
        accessFailedCount: {
            type: 'integer',
            format: 'int32'
        },
        lockoutEnd: {
            type: 'string',
            format: 'date-time',
            nullable: true
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        },
        entityVersion: {
            type: 'integer',
            format: 'int32'
        },
        lastPasswordChangeTime: {
            type: 'string',
            format: 'date-time',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Identity_IdentityUserUpdateDtoSchema = {
    required: ['email', 'userName'],
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        userName: {
            maxLength: 256,
            minLength: 0,
            type: 'string'
        },
        name: {
            maxLength: 64,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        surname: {
            maxLength: 64,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        email: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            format: 'email'
        },
        phoneNumber: {
            maxLength: 16,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        lockoutEnabled: {
            type: 'boolean'
        },
        roleNames: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        password: {
            maxLength: 128,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Identity_IdentityUserUpdateRolesDtoSchema = {
    required: ['roleNames'],
    type: 'object',
    properties: {
        roleNames: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Localization_LanguageInfoSchema = {
    type: 'object',
    properties: {
        cultureName: {
            type: 'string',
            nullable: true
        },
        uiCultureName: {
            type: 'string',
            nullable: true
        },
        displayName: {
            type: 'string',
            nullable: true
        },
        twoLetterISOLanguageName: {
            type: 'string',
            nullable: true,
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_NameValueSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        value: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_PermissionManagement_GetPermissionListResultDtoSchema = {
    type: 'object',
    properties: {
        entityDisplayName: {
            type: 'string',
            nullable: true
        },
        groups: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.PermissionManagement.PermissionGroupDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_PermissionManagement_PermissionGrantInfoDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        displayName: {
            type: 'string',
            nullable: true
        },
        parentName: {
            type: 'string',
            nullable: true
        },
        isGranted: {
            type: 'boolean'
        },
        allowedProviders: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        grantedProviders: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.PermissionManagement.ProviderInfoDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_PermissionManagement_PermissionGroupDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        displayName: {
            type: 'string',
            nullable: true
        },
        displayNameKey: {
            type: 'string',
            nullable: true
        },
        displayNameResource: {
            type: 'string',
            nullable: true
        },
        permissions: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.PermissionManagement.PermissionGrantInfoDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_PermissionManagement_ProviderInfoDtoSchema = {
    type: 'object',
    properties: {
        providerName: {
            type: 'string',
            nullable: true
        },
        providerKey: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_PermissionManagement_UpdatePermissionDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        isGranted: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_PermissionManagement_UpdatePermissionsDtoSchema = {
    type: 'object',
    properties: {
        permissions: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.PermissionManagement.UpdatePermissionDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_SettingManagement_EmailSettingsDtoSchema = {
    type: 'object',
    properties: {
        smtpHost: {
            type: 'string',
            nullable: true
        },
        smtpPort: {
            type: 'integer',
            format: 'int32'
        },
        smtpUserName: {
            type: 'string',
            nullable: true
        },
        smtpPassword: {
            type: 'string',
            nullable: true
        },
        smtpDomain: {
            type: 'string',
            nullable: true
        },
        smtpEnableSsl: {
            type: 'boolean'
        },
        smtpUseDefaultCredentials: {
            type: 'boolean'
        },
        defaultFromAddress: {
            type: 'string',
            nullable: true
        },
        defaultFromDisplayName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_SettingManagement_SendTestEmailInputSchema = {
    required: ['senderEmailAddress', 'subject', 'targetEmailAddress'],
    type: 'object',
    properties: {
        senderEmailAddress: {
            minLength: 1,
            type: 'string'
        },
        targetEmailAddress: {
            minLength: 1,
            type: 'string'
        },
        subject: {
            minLength: 1,
            type: 'string'
        },
        body: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_SettingManagement_UpdateEmailSettingsDtoSchema = {
    required: ['defaultFromAddress', 'defaultFromDisplayName'],
    type: 'object',
    properties: {
        smtpHost: {
            maxLength: 256,
            type: 'string',
            nullable: true
        },
        smtpPort: {
            maximum: 65535,
            minimum: 1,
            type: 'integer',
            format: 'int32'
        },
        smtpUserName: {
            maxLength: 1024,
            type: 'string',
            nullable: true
        },
        smtpPassword: {
            maxLength: 1024,
            type: 'string',
            format: 'password',
            nullable: true
        },
        smtpDomain: {
            maxLength: 1024,
            type: 'string',
            nullable: true
        },
        smtpEnableSsl: {
            type: 'boolean'
        },
        smtpUseDefaultCredentials: {
            type: 'boolean'
        },
        defaultFromAddress: {
            maxLength: 1024,
            minLength: 1,
            type: 'string'
        },
        defaultFromDisplayName: {
            maxLength: 1024,
            minLength: 1,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_TenantManagement_TenantCreateDtoSchema = {
    required: ['adminEmailAddress', 'adminPassword', 'name'],
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        name: {
            maxLength: 64,
            minLength: 0,
            type: 'string'
        },
        adminEmailAddress: {
            maxLength: 256,
            minLength: 1,
            type: 'string',
            format: 'email'
        },
        adminPassword: {
            maxLength: 128,
            minLength: 1,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_TenantManagement_TenantDtoSchema = {
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_TenantManagement_TenantUpdateDtoSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        },
        name: {
            maxLength: 64,
            minLength: 0,
            type: 'string'
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Users_UserDataSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        tenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        userName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        surname: {
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        email: {
            type: 'string',
            nullable: true
        },
        emailConfirmed: {
            type: 'boolean'
        },
        phoneNumber: {
            type: 'string',
            nullable: true
        },
        phoneNumberConfirmed: {
            type: 'boolean'
        },
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Validation_StringValues_IStringValueTypeSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {
                nullable: true
            },
            nullable: true,
            readOnly: true
        },
        validator: {
            '$ref': '#/components/schemas/Volo.Abp.Validation.StringValues.IValueValidator'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Validation_StringValues_IValueValidatorSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        }
    },
    additionalProperties: false
} as const;